
/****************************************************************************
 *   This program is free software: you can redistribute it and/or modify   *
 *   it under the terms of the GNU General Public License as published by   *
 *   the Free Software Foundation, either version 3 of the License, or      *
 *   (at your option) any later version.                                    *
 *                                                                          *
 *   This program is distributed in the hope that it will be useful,        *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
 *   GNU General Public License for more details.                           *
 *                                                                          *
 *   To view a copy of the GNU General Public License, go to the following  *
 *   location: <http://www.gnu.org/licenses/>.                              *
 ****************************************************************************/

/**
 * This file was auto-generated using "svg2cpp.pl"
 *
 * The encoding consists of x,y pairs with the min and max scaled to
 * 0x0000 and 0xFFFE. A single 0xFFFF in the data stream indicates the
 * start of a new closed path.
 */

#pragma once

constexpr float x_min = 0.000000;

constexpr float x_max = 272.000000;

constexpr float y_min = 0.000000;

constexpr float y_max = 480.000000;

const PROGMEM uint16_t syringe_fluid[] = {0x7BA9, 0x55A7, 0x883F, 0x57F7, 0x8E00, 0x57F7, 0x9ACB, 0x55A7, 0x9ACB, 0x1EBF, 0x7BA9, 0x1EBF, 0x7BA9, 0x55A7};

const PROGMEM uint16_t z_neg[] = {0xC9DB, 0xAD95, 0xD952, 0xAD95, 0xD952, 0xC253, 0xE10D, 0xC253, 0xD196, 0xCCB2, 0xC220, 0xC253, 0xC9DB, 0xC253, 0xC9DB, 0xAD95};

const PROGMEM uint16_t z_pos[] = {0xC9DB, 0xA335, 0xD952, 0xA335, 0xD952, 0x8E77, 0xE10D, 0x8E77, 0xD196, 0x8418, 0xC220, 0x8E77, 0xC9DB, 0x8E77, 0xC9DB, 0xA335};

const PROGMEM uint16_t menu_btn[] = {0x8E4B, 0xDF07, 0xEB62, 0xDF07, 0xEED1, 0xE0F9, 0xEED1, 0xF1AE, 0xEB62, 0xF3A0, 0x8E4B, 0xF3A0, 0x8ADB, 0xF1AE, 0x8ADB, 0xE0F9, 0x8E4B, 0xDF07, 0x8E4B, 0xDF07};

const PROGMEM uint16_t usb_btn[] = {0x1828, 0xDF07, 0x7540, 0xDF07, 0x78AF, 0xE0F9, 0x78AF, 0xF1AE, 0x7540, 0xF3A0, 0x1828, 0xF3A0, 0x14B9, 0xF1AE, 0x14B9, 0xE0F9, 0x1828, 0xDF07, 0x1828, 0xDF07};

const PROGMEM uint16_t y_neg[] = {0x4F9B, 0xAFB3, 0x61C8, 0xAFB3, 0x548D, 0xBF64, 0x5DA3, 0xBF64, 0x44D9, 0xC73D, 0x394A, 0xBF64, 0x4260, 0xBF64, 0x4F9B, 0xAFB3};

const PROGMEM uint16_t y_pos[] = {0x5CD6, 0xA001, 0x6F02, 0xA001, 0x7C3D, 0x904F, 0x8554, 0x904F, 0x79C4, 0x8877, 0x60FA, 0x904F, 0x6A11, 0x904F, 0x5CD6, 0xA001};

const PROGMEM uint16_t x_neg[] = {0x50A1, 0xA3ED, 0x4A04, 0xABC6, 0x25AA, 0xABC6, 0x225B, 0xAFB3, 0x16CC, 0xA7DA, 0x2F96, 0xA001, 0x2C48, 0xA3ED, 0x50A1, 0xA3ED};

const PROGMEM uint16_t x_pos[] = {0x74CA, 0xA3ED, 0x6E2D, 0xABC6, 0x9286, 0xABC6, 0x8F37, 0xAFB3, 0xA801, 0xA7DA, 0x9C72, 0xA001, 0x9923, 0xA3ED, 0x74CA, 0xA3ED};

const PROGMEM uint16_t syringe[] = {0x811F, 0x4DC8, 0x811F, 0x5018, 0x8D5F, 0x5018, 0x8D5F, 0x4DC8, 0x811F, 0x4DC8, 0xFFFF, 0x811F, 0x46D7, 0x811F, 0x4927, 0x8D5F, 0x4927, 0x8D5F, 0x46D7, 0x811F, 0x46D7, 0xFFFF, 0x811F, 0x3FE6, 0x811F, 0x4236, 0x8D5F, 0x4236, 0x8D5F, 0x3FE6, 0x811F, 0x3FE6, 0xFFFF, 0x811F, 0x38F4, 0x811F, 0x3B45, 0x8D5F, 0x3B45, 0x8D5F, 0x38F4, 0x811F, 0x38F4, 0xFFFF, 0x811F, 0x3203, 0x811F, 0x3454, 0x8D5F, 0x3454, 0x8D5F, 0x3203, 0x811F, 0x3203, 0xFFFF, 0x811F, 0x2B12, 0x811F, 0x2D63, 0x8D5F, 0x2D63, 0x8D5F, 0x2B12, 0x811F, 0x2B12, 0xFFFF, 0x811F, 0x2421, 0x811F, 0x2672, 0x8D5F, 0x2672, 0x8D5F, 0x2421, 0x811F, 0x2421, 0xFFFF, 0x78F4, 0x119E, 0x78F4, 0x163F, 0x8534, 0x163F, 0x8534, 0x1D30, 0x78F4, 0x1D30, 0x78F4, 0x5709, 0x8534, 0x5959, 0x8534, 0x604B, 0x8949, 0x604B, 0x8949, 0x751E, 0x8D5F, 0x776E, 0x8D5F, 0x604B, 0x9174, 0x604B, 0x9174, 0x5959, 0x9DB4, 0x5709, 0x9DB4, 0x1D30, 0x9174, 0x1D30, 0x9174, 0x163F, 0x9DB4, 0x163F, 0x9DB4, 0x119E, 0x78F4, 0x119E, 0xFFFF, 0x8949, 0x163F, 0x8D5F, 0x163F, 0x8D5F, 0x1D30, 0x8949, 0x1D30, 0x8949, 0x163F, 0xFFFF, 0x7D09, 0x1F81, 0x999F, 0x1F81, 0x999F, 0x54B9, 0x8D5F, 0x5709, 0x8949, 0x5709, 0x7D09, 0x54B9, 0x7D09, 0x1F81};

const PROGMEM uint16_t e_neg[] = {0xC85A, 0x3D24, 0xD8CA, 0x3D24, 0xD8CA, 0x2434, 0xE102, 0x2434, 0xD092, 0x17BC, 0xC022, 0x2434, 0xC85A, 0x2434, 0xC85A, 0x3D24};

const PROGMEM uint16_t e_pos[] = {0xC85A, 0x499C, 0xD8CA, 0x499C, 0xD8CA, 0x628C, 0xE102, 0x628C, 0xD092, 0x6F04, 0xC022, 0x628C, 0xC85A, 0x628C, 0xC85A, 0x499C};

const PROGMEM uint16_t syringe_outline[] = {0x78F4, 0x119E, 0x78F4, 0x163F, 0x8534, 0x163F, 0x8534, 0x1D30, 0x78F4, 0x1D30, 0x78F4, 0x5709, 0x8534, 0x5959, 0x8534, 0x604B, 0x8949, 0x604B, 0x8949, 0x751E, 0x8D5F, 0x776E, 0x8D5F, 0x604B, 0x9174, 0x604B, 0x9174, 0x5959, 0x9DB4, 0x5709, 0x9DB4, 0x1D30, 0x9174, 0x1D30, 0x9174, 0x163F, 0x9DB4, 0x163F, 0x9DB4, 0x119E, 0x78F4, 0x119E};

const PROGMEM uint16_t padlock[] = {0x5CE7, 0x9651, 0x582B, 0x96DB, 0x5447, 0x9855, 0x519E, 0x9A84, 0x5097, 0x9D30, 0x5097, 0x9F6B, 0x51FD, 0xA0D2, 0x54D6, 0xA0D2, 0x563D, 0x9F6B, 0x563D, 0x9D3D, 0x56C9, 0x9BC8, 0x5837, 0x9A99, 0x5A52, 0x99CE, 0x5CE7, 0x9984, 0x5F7D, 0x99CE, 0x6199, 0x9A99, 0x6307, 0x9BC7, 0x6394, 0x9D3D, 0x6394, 0xA55D, 0x5055, 0xA55D, 0x4DAB, 0xA5FD, 0x4C91, 0xA77F, 0x4C91, 0xB2C9, 0x4DAB, 0xB44B, 0x5055, 0xB4EB, 0x697B, 0xB4EB, 0x6C25, 0xB44B, 0x6D3F, 0xB2C9, 0x6D3F, 0xA77F, 0x6C25, 0xA5FD, 0x697B, 0xA55D, 0x6939, 0x9D34, 0x6832, 0x9A84, 0x658A, 0x9855, 0x61A4, 0x96DB};

const PROGMEM uint16_t home_z[] = {0xD19E, 0x96B3, 0xB628, 0xA643, 0xBD05, 0xA643, 0xBD05, 0xB5D2, 0xCAC0, 0xB5D2, 0xCAC0, 0xAE0A, 0xD87C, 0xAE0A, 0xD87C, 0xB5D2, 0xE637, 0xB5D2, 0xE637, 0xA643, 0xED14, 0xA643, 0xE278, 0xA03F, 0xE278, 0x98B4, 0xDB9A, 0x98B4, 0xDB9A, 0x9C5B};

const PROGMEM uint16_t home_e[] = {0xB257, 0x2D34, 0x96E0, 0x3CC4, 0x9DBE, 0x3CC4, 0x9DBE, 0x4C53, 0xAB79, 0x4C53, 0xAB79, 0x448C, 0xB934, 0x448C, 0xB934, 0x4C53, 0xC6EF, 0x4C53, 0xC6EF, 0x3CC4, 0xCDCD, 0x3CC4, 0xC330, 0x36C1, 0xC330, 0x2F35, 0xBC53, 0x2F35, 0xBC53, 0x32DD};

